name: 'Deploy'
on:
  push:
    branches:
        - main
  workflow_dispatch:


env:
  PYTHON_VERSION: 3.11
  CDF_PROJECT: cdf-bootcamp-10-prod
  LOGIN_FLOW: client_credentials
  CDF_CLUSTER: westeurope-1
  IDP_CLIENT_ID: ac72ca50-0b5e-4e9d-af8c-9203cbdd900f
  IDP_CLIENT_SECRET: ${{ secrets.IDP_CLIENT_SECRET }}
  DATA_PIPELINE_OEE_CLIENT_ID: 930f8229-ab1b-4aa4-8457-1a1f9a558444
  DATA_PIPELINE_OEE_CLIENT_SECRET: ${{ secrets.DATA_PIPELINE_OEE_CLIENT_SECRET }}
  ICAPI_EXTRACTORS_CLIENT_ID: 650bddf7-59c1-4a1e-96fb-e7de6dad7446
  ICAPI_EXTRACTORS_CLIENT_SECRET: ${{ secrets.ICAPI_EXTRACTORS_CLIENT_SECRET }}
  IDP_TENANT_ID: 16e3985b-ebe8-4e24-9da4-933e21a9fc81
  IDP_TOKEN_URL: https://login.microsoftonline.com/16e3985b-ebe8-4e24-9da4-933e21a9fc81/oauth2/v2.0/token
  CDF_URL: https://westeurope-1.cognitedata.com
  IDP_SCOPES: https://westeurope-1.cognitedata.com/.default

jobs:
  build:
    name: Deploy to production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install project
        run: poetry install --no-interaction

      - name: CDF verify Auth
        run: |
          poetry run cdf-tk auth verify --no-prompt

      - name: Build modules
        run: |
          poetry run cdf-tk build --env=prod 

      - name: Deploy modules
        run: |
          poetry run cdf-tk deploy --env=prod --verbose --dry-run

      - name: Deploy modules
        run: |
          poetry run cdf-tk deploy --env=prod --verbose